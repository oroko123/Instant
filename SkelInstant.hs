module SkelInstant where

-- Haskell module generated by the BNF converter

import AbsInstant
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transProgram :: Program -> Result
transProgram x = case x of
  Prog stmts  -> failure x


transStmt :: Stmt -> Result
transStmt x = case x of
  SAss id exp  -> failure x
  SExp exp  -> failure x


transExp :: Exp -> Result
transExp x = case x of
  ExpAdd exp0 exp  -> failure x
  ExpSub exp0 exp  -> failure x
  ExpMul exp0 exp  -> failure x
  ExpDiv exp0 exp  -> failure x
  ExpLit n  -> failure x
  ExpVar id  -> failure x



